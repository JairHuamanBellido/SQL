CREATE DATABASE JironPizza;
GO
USE JironPizza;


/* PROVEEDOR */
/* Representa los proveedore del restaurante */
CREATE TABLE Proveedor(
ruc VARCHAR(15) NOT NULL PRIMARY KEY,
razon_social VARCHAR(200) UNIQUE,
rubro varchar(150),
telefono VARCHAR(15),
direccion VARCHAR(200)
);



/* COMPRA - PROVEEDOR */
/* Representa las compras que se realizan a cada proveedor */
CREATE TABLE CompraProveedor(
compra_id INT IDENTITY(1,1) PRIMARY KEY,
ruc VARCHAR(15) NOT NULL FOREIGN KEY REFERENCES Proveedor(ruc),
monto MONEY NOT NULL CHECK(monto > 0),
fecha DATE NOT NULL
);



/* INSUMO */
/* Representa los insumos del restaurante */
CREATE TABLE Insumo(
insumo_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(100) NOT NULL,
descripcion VARCHAR(150),
precio MONEY CHECK(precio > 0) NOT NULL,
unidad VARCHAR(50) NOT NULL
);



/* DETALLE - COMPRA */
/* Es un historial de compras de insumos a los proveedores */
CREATE TABLE DetalleCompra(
compra_id INT NOT NULL FOREIGN KEY REFERENCES CompraProveedor(compra_id),
insumo_id INT NOT NULL FOREIGN KEY REFERENCES Insumo(insumo_id),
cantidad FLOAT NOT NULL CHECK (cantidad > 0),
monto MONEY NOT NULL CHECK (monto > 0),
PRIMARY KEY(compra_id, insumo_id)
);



/* PRODUCTO */
/* Representa los productos que ofrece el restaurante */
CREATE TABLE Producto(
producto_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(100) NOT NULL,
descripcion varchar(200),
precio MONEY NOT NULL CHECK(precio > 0)
);



/* PRODUCTO - INSUMO */
/* La información de qué insumos se utilizan en cad producto */
CREATE TABLE ProductoInsumo(
producto_id INT NOT NULL FOREIGN KEY REFERENCES Producto(producto_id),
insumo_id INT NOT NULL FOREIGN KEY REFERENCES Insumo(insumo_id),
cantidad FLOAT NOT NULL CHECK(cantidad > 0),
PRIMARY KEY (producto_id, insumo_id)
);



/* SOCIO */
/* Representa las categorias de socios existentes */
CREATE TABLE Socio(
socio_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(50) NOT NULL,
descripcion VARCHAR(150),
minimo_compras INT NOT NULL CHECK(minimo_compras > 0)
);



/* PROMOCION */
/* Representa las promociones de cada rango de socio */
CREATE TABLE Promocion(
promocion_id INT IDENTITY(1,1) PRIMARY KEY,
socio_id INT NOT NULL FOREIGN KEY REFERENCES Socio(socio_id),
descripcion VARCHAR(150) NOT NULL
);



/* PRODUCTO - PROMOCION */
/* Representa el detalle de las promociones */
CREATE TABLE ProductoPromocion(
promocion_id INT NOT NULL FOREIGN KEY REFERENCES Promocion(promocion_id),
producto_id INT NOT NULL FOREIGN KEY REFERENCES Producto(producto_id),
descuento FLOAT NOT NULL
PRIMARY KEY(promocion_id, producto_id)
);



/* CLIENTE */
/* Representa a un cliente de la empresa */
CREATE TABLE Cliente(
cliente_id INT IDENTITY(1,1) PRIMARY KEY,
dni VARCHAR(10) NOT NULL,
nombre VARCHAR(50) NOT NULL, /* nombre */
apellido VARCHAR(50) NOT NULL, /* apellidos */
direccion VARCHAR(200),
correo VARCHAR(100),
sexo VARCHAR(12),
socio_id INT FOREIGN KEY REFERENCES Socio(socio_id),
compras INT NOT NULL CHECK(compras >= 0)
);



/* LOCAL */
/* Representa un local de la empresa */
CREATE TABLE Locals(
local_id INT IDENTITY(1,1) PRIMARY KEY,
direccion VARCHAR(200) NOT NULL,
capacidad INT NOT NULL CHECK(capacidad > 0)
);



/* MESA */
/* Representa las mesas de cada local */
CREATE TABLE Mesa(
mesa_id INT IDENTITY(1,1) PRIMARY KEY,
local_id INT NOT NULL FOREIGN KEY REFERENCES Locals(local_id)
);



/* ALMACEN */
/* Representa el almacén que tiene cada local */
CREATE TABLE Almacen(
almacen_id INT IDENTITY(1,1) PRIMARY KEY,
local_id INT UNIQUE FOREIGN KEY REFERENCES Locals(local_id)
);



/* INSUMO - ALMACEN */
/* REPRESENTA QUÉ INSUMO TIENE CADA ALMACÉN */
CREATE TABLE InsumoAlmacen(
insumo_id INT NOT NULL FOREIGN KEY REFERENCES Insumo(insumo_id),
almacen_id INT NOT NULL FOREIGN KEY REFERENCES Almacen(almacen_id),
cantidad FLOAT NOT NULL CHECK(cantidad > 0),
PRIMARY KEY(insumo_id, almacen_id)
);



/* TIPO - EMPLEADO */
/* Representa los roles de los empleados que hay en los locales */
CREATE TABLE TipoEmpleado(
tipo_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(50) NOT NULL,
salario MONEY NOT NULL CHECK(salario > 0)
);



/* Provincia */
CREATE TABLE Provincia(
provincia_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(50) NOT NULL
);



/* DISTRITO */
CREATE TABLE Distrito(
distrito_id INT IDENTITY(1,1) PRIMARY KEY,
provincia_id INT NOT NULL FOREIGN KEY REFERENCES Provincia(provincia_id),
nombre VARCHAR(50) NOT NULL
);



/* CALLE */
CREATE TABLE Calle(
calle_id INT IDENTITY(1,1) PRIMARY KEY,
distrito_id INT NOT NULL FOREIGN KEY REFERENCES Distrito(distrito_id),
nombre VARCHAR(150) NOT NULL
);



/* INFORMACION - EMPLEADO */
/* Representa la información del empleado */
CREATE TABLE InformacionEmpleado(
informacion_id INT IDENTITY(1,1) PRIMARY KEY,
nombre VARCHAR(50) NOT NULL,
apellido VARCHAR(100) NOT NULL,
correo VARCHAR(100) NOT NULL,
calle_id INT FOREIGN KEY REFERENCES Calle(calle_id),
direccion VARCHAR(100),
telefono VARCHAR(15)
);



/* EMPLEADO */
/* Representa los empleados del los locales */
CREATE TABLE Empleado(
empleado_id INT IDENTITY(1,1) PRIMARY KEY,
tipo_id INT NOT NULL FOREIGN KEY REFERENCES TipoEmpleado(tipo_id),
local_id INT NOT NULL FOREIGN KEY REFERENCES Locals(local_id),
informacion_id INT UNIQUE NOT NULL FOREIGN KEY REFERENCES InformacionEmpleado(informacion_id)
);



/* ASISTENCIA */
/* Historial de asistencia del empleado */
CREATE TABLE Asistencia(
asistencia_id INT IDENTITY(1,1) PRIMARY KEY,
empleado_id INT NOT NULL FOREIGN KEY REFERENCES Empleado(empleado_id),
ingreso smalldatetime,
salida smalldatetime
);



/* COMPROBANTE */
/* Representa el comprobante de pago de un cliente */
CREATE TABLE Comprobante(
comprobante_id INT IDENTITY(1,1) PRIMARY KEY,
cliente_id INT NOT NULL FOREIGN KEY REFERENCES Cliente(cliente_id),
mesa_id INT NOT NULL FOREIGN KEY REFERENCES Mesa(mesa_id),
empleado_id INT NOT NULL FOREIGN KEY REFERENCES Empleado(empleado_id),
monto MONEY NOT NULL CHECK (monto > 0),
fecha DATE
);


/* PRODUCTO - COMPROBANTE */
/* Detalle del comprobante */
CREATE TABLE ProductoComprobante(
producto_id INT NOT NULL FOREIGN KEY REFERENCES Producto(producto_id),
comprobante_id INT NOT NULL FOREIGN KEY REFERENCES Comprobante(comprobante_id),
PRIMARY KEY(producto_id, comprobante_id)
);
